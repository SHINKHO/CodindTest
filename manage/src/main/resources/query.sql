#Root Account
/*
DROP DATABASE IF EXISTS library;
CREATE DATABASE library CHARACTER SET UTF8 COLLATE UTF8_UNICODE_CI;
GRANT ALL PRIVILEGES ON library.* TO librarian;
COMMIT;

*/

#librarian account
#book info related tables

USE library;
CREATE TABLE KDC_CODE(
	KDC_MAIN SMALLINT,
	KDC_DIV SMALLINT,
	
	CONSTRAINT PK_KDC_CODE PRIMARY KEY(KDC_MAIN,KDC_DIV)
);

CREATE TABLE AUTHOR(
	AUTHOR_ID BIGINT NOT NULL AUTO_INCREMENT UNIQUE,
	AUTHOR_NAME_FIRST VARCHAR(35) NOT NULL,
	AUTHOR_NAME_LAST VARCHAR(35) NOT NULL,
	
	CONSTRAINT PK_AUTHOR PRIMARY KEY(AUTHOR_ID)
);
#member table
CREATE TABLE MEMBER(
	MEMBER_ID VARCHAR(15) NOT NULL UNIQUE,
	MEMBER_NAME_FIRST VARCHAR(35) NOT NULL,
	MEMBER_NAME_LAST VARCHAR(35) NOT NULL,
	
	CONSTRAINT PK_MEMBER PRIMARY KEY(MEMBER_ID)
);
#book table

CREATE TABLE BOOK (
    ISBN VARCHAR(13) PRIMARY KEY,
    TITLE VARCHAR(40),
    BOOK_CNT SMALLINT,
    BOOK_VER SMALLINT,
    WRITTEN_DATE DATE,
    KDC_MAIN SMALLINT,book
    KDC_DIV SMALLINT,
    AUTHOR BIGINT,
    FOREIGN KEY (KDC_MAIN, KDC_DIV) REFERENCES KDC_CODE(KDC_MAIN, KDC_DIV),
    FOREIGN KEY (AUTHOR) REFERENCES AUTHOR(AUTHOR_ID)
);
#transactions

CREATE TABLE TRANSACTION_RENT (
	TRANSACTION_RENT_NO BIGINT AUTO_INCREMENT,
	MEMBER_ID VARCHAR(15) NOT NULL,
	BOOK_ID VARCHAR(13) NOT NULL,
	RENT_DATETIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	
	CONSTRAINT PK_TRANSACTION_RENT PRIMARY KEY (TRANSACTION_RENT_NO),
	CONSTRAINT FK_MEMBER FOREIGN KEY (MEMBER_ID)
	REFERENCES MEMBER(MEMBER_ID),
	CONSTRAINT FK_BOOK FOREIGN KEY (BOOK_ID)
	REFERENCES BOOK(ISBN)
);

CREATE TABLE TRANSACTION_RETURN (
	TRANSACTION_RETURN_NO BIGINT AUTO_INCREMENT,
	TRANSACTION_RENT_NO BIGINT NOT NULL UNIQUE,
	RETURN_DATETIME TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	
	CONSTRAINT PK_TRANSACTION_RETURN PRIMARY KEY (TRANSACTION_RETURN_NO),
	CONSTRAINT FK_TRANSACTION_RENT FOREIGN KEY (TRANSACTION_RENT_NO)
	REFERENCES TRANSACTION_RENT(TRANSACTION_RENT_NO)
);

ALTER TABLE TRANSACTION_RETURN
ADD COLUMN RENTAL_PERIOD INT ;

DELIMITER //
CREATE TRIGGER calculate_rental_period
BEFORE INSERT ON TRANSACTION_RETURN
FOR EACH ROW
BEGIN
  SET NEW.RENTAL_PERIOD = TIMESTAMPDIFF(SECOND,
    (SELECT RENT_DATETIME FROM TRANSACTION_RENT WHERE TRANSACTION_RENT_NO = NEW.TRANSACTION_RENT_NO),
    NEW.RETURN_DATETIME);
END;
//
DELIMITER ;

COMMIT;

#ALTER TABLE author AUTO_INCREMENT = 0;

